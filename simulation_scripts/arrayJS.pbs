#!/bin/bash

#PBS -l select=1:ncpus=1:mem=1gb
#PBS -l walltime=72:00:00
#PBS -J 1-27
#PBS -o /dev/null
#PBS -e /dev/null
#wc -l

# Change above whatever computational resources
# are required

# Load modules for any applications
module load anaconda3/personal
source activate py27
module load intel-suite

#module load lammps

RUN_PATH=$(sed -n "${PBS_ARRAY_INDEX}p" $PBS_O_WORKDIR/runs_list)
touch ${RUN_PATH}/run_check
cd $EPHEMERAL
mkdir $PBS_JOBID
cd $PBS_JOBID

cp  ${RUN_PATH}/* .
# Run program, using 'mpiexec' to start the job
# mpiexec automatically picks up the # of cores
# assigned to the job. No other flags are required
#  - note: don't use 'mpirun'

# pbsexec ensures early termination of the job as
# it approaches the time limit

#In this case I have my own executable, but either
#load a different module above or change the path

timeout 71.5h /rds/general/user/maa4617/home/lammps-7Aug19/src/lmp_serial -in main.in

# Copy any output back to the $PBS_O_WORKDIR
#mkdir  $PBS_O_WORKDIR/Results
#cp *  $PBS_O_WORKDIR/Results
cp -R * ${RUN_PATH}
cd ..
rm -R $PBS_JOBID
